{"ast":null,"code":"export class SubscriptionTracker {\n  _subs;\n  constructor() {\n    this._subs = new Map();\n  }\n  subscribe(topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) ?? [];\n    if (topicSubs.find(s => s.handler === handler) != null) {\n      throw new Error(`Already subscribed to ${topic} with this handler`);\n    }\n    // Create controller so a call to unsubscribe can cancel the request\n    const controller = new AbortController();\n    this._subs.set(topic, [{\n      handler,\n      controller\n    }].concat(topicSubs));\n    // If there is an external signal, forward the abort event\n    if (signal != null) {\n      signal.addEventListener('abort', () => {\n        this.unsubscribe(topic, handler);\n      });\n    }\n    return controller.signal;\n  }\n  unsubscribe(topic, handler) {\n    const subs = this._subs.get(topic) ?? [];\n    let unsubs;\n    if (handler != null) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler));\n      unsubs = subs.filter(s => s.handler === handler);\n    } else {\n      this._subs.set(topic, []);\n      unsubs = subs;\n    }\n    if ((this._subs.get(topic) ?? []).length === 0) {\n      this._subs.delete(topic);\n    }\n    unsubs.forEach(s => {\n      s.controller.abort();\n    });\n  }\n}","map":{"version":3,"names":["SubscriptionTracker","_subs","constructor","Map","subscribe","topic","handler","signal","topicSubs","get","find","s","Error","controller","AbortController","set","concat","addEventListener","unsubscribe","subs","unsubs","filter","length","delete","forEach","abort"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/pubsub/subscription-tracker.ts"],"sourcesContent":["import type { EventHandler, Message } from '@libp2p/interface'\n\nexport interface PubsubSubscription {\n  handler: EventHandler<Message>\n  controller: AbortController\n}\n\nexport class SubscriptionTracker {\n  private readonly _subs: Map<string, PubsubSubscription[]>\n\n  constructor () {\n    this._subs = new Map()\n  }\n\n  subscribe (topic: string, handler: EventHandler<Message>, signal?: AbortSignal): AbortSignal {\n    const topicSubs = this._subs.get(topic) ?? []\n\n    if (topicSubs.find(s => s.handler === handler) != null) {\n      throw new Error(`Already subscribed to ${topic} with this handler`)\n    }\n\n    // Create controller so a call to unsubscribe can cancel the request\n    const controller = new AbortController()\n\n    this._subs.set(topic, [{ handler, controller }].concat(topicSubs))\n\n    // If there is an external signal, forward the abort event\n    if (signal != null) {\n      signal.addEventListener('abort', () => { this.unsubscribe(topic, handler) })\n    }\n\n    return controller.signal\n  }\n\n  unsubscribe (topic: string, handler?: EventHandler<Message>): void {\n    const subs = this._subs.get(topic) ?? []\n    let unsubs\n\n    if (handler != null) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler))\n      unsubs = subs.filter(s => s.handler === handler)\n    } else {\n      this._subs.set(topic, [])\n      unsubs = subs\n    }\n\n    if ((this._subs.get(topic) ?? []).length === 0) {\n      this._subs.delete(topic)\n    }\n\n    unsubs.forEach(s => {\n      s.controller.abort()\n    })\n  }\n}\n"],"mappings":"AAOA,OAAM,MAAOA,mBAAmB;EACbC,KAAK;EAEtBC,YAAA;IACE,IAAI,CAACD,KAAK,GAAG,IAAIE,GAAG,EAAE;EACxB;EAEAC,SAASA,CAAEC,KAAa,EAAEC,OAA8B,EAAEC,MAAoB;IAC5E,MAAMC,SAAS,GAAG,IAAI,CAACP,KAAK,CAACQ,GAAG,CAACJ,KAAK,CAAC,IAAI,EAAE;IAE7C,IAAIG,SAAS,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,OAAO,KAAKA,OAAO,CAAC,IAAI,IAAI,EAAE;MACtD,MAAM,IAAIM,KAAK,CAAC,yBAAyBP,KAAK,oBAAoB,CAAC;IACrE;IAEA;IACA,MAAMQ,UAAU,GAAG,IAAIC,eAAe,EAAE;IAExC,IAAI,CAACb,KAAK,CAACc,GAAG,CAACV,KAAK,EAAE,CAAC;MAAEC,OAAO;MAAEO;IAAU,CAAE,CAAC,CAACG,MAAM,CAACR,SAAS,CAAC,CAAC;IAElE;IACA,IAAID,MAAM,IAAI,IAAI,EAAE;MAClBA,MAAM,CAACU,gBAAgB,CAAC,OAAO,EAAE,MAAK;QAAG,IAAI,CAACC,WAAW,CAACb,KAAK,EAAEC,OAAO,CAAC;MAAC,CAAC,CAAC;IAC9E;IAEA,OAAOO,UAAU,CAACN,MAAM;EAC1B;EAEAW,WAAWA,CAAEb,KAAa,EAAEC,OAA+B;IACzD,MAAMa,IAAI,GAAG,IAAI,CAAClB,KAAK,CAACQ,GAAG,CAACJ,KAAK,CAAC,IAAI,EAAE;IACxC,IAAIe,MAAM;IAEV,IAAId,OAAO,IAAI,IAAI,EAAE;MACnB,IAAI,CAACL,KAAK,CAACc,GAAG,CAACV,KAAK,EAAEc,IAAI,CAACE,MAAM,CAACV,CAAC,IAAIA,CAAC,CAACL,OAAO,KAAKA,OAAO,CAAC,CAAC;MAC9Dc,MAAM,GAAGD,IAAI,CAACE,MAAM,CAACV,CAAC,IAAIA,CAAC,CAACL,OAAO,KAAKA,OAAO,CAAC;IAClD,CAAC,MAAM;MACL,IAAI,CAACL,KAAK,CAACc,GAAG,CAACV,KAAK,EAAE,EAAE,CAAC;MACzBe,MAAM,GAAGD,IAAI;IACf;IAEA,IAAI,CAAC,IAAI,CAAClB,KAAK,CAACQ,GAAG,CAACJ,KAAK,CAAC,IAAI,EAAE,EAAEiB,MAAM,KAAK,CAAC,EAAE;MAC9C,IAAI,CAACrB,KAAK,CAACsB,MAAM,CAAClB,KAAK,CAAC;IAC1B;IAEAe,MAAM,CAACI,OAAO,CAACb,CAAC,IAAG;MACjBA,CAAC,CAACE,UAAU,CAACY,KAAK,EAAE;IACtB,CAAC,CAAC;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}