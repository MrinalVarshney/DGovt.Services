{"ast":null,"code":"import { createStat } from './stat.js';\nimport { createWantlistForPeer } from './wantlist-for-peer.js';\nimport { createWantlist } from './wantlist.js';\nexport function createBitswap(client) {\n  return {\n    /**\n     * TODO: https://github.com/ipfs/js-kubo-rpc-client/issues/99\n     */\n    wantlist: createWantlist(client),\n    wantlistForPeer: createWantlistForPeer(client),\n    stat: createStat(client)\n  };\n}","map":{"version":3,"names":["createStat","createWantlistForPeer","createWantlist","createBitswap","client","wantlist","wantlistForPeer","stat"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/bitswap/index.ts"],"sourcesContent":["import { createStat } from './stat.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createWantlist } from './wantlist.js'\nimport type { HTTPRPCOptions } from '../index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\nimport type { PeerId } from '@libp2p/interface'\nimport type { CID } from 'multiformats/cid'\n\nexport interface BitswapStats {\n  provideBufLen: number\n  wantlist: CID[]\n  peers: PeerId[]\n  blocksReceived: bigint\n  dataReceived: bigint\n  blocksSent: bigint\n  dataSent: bigint\n  dupBlksReceived: bigint\n  dupDataReceived: bigint\n}\n\nexport interface BitswapAPI {\n  /**\n   * Show diagnostic information on the bitswap agent.\n   * Note: `bitswap.stat` and `stats.bitswap` can be used interchangeably.\n   *\n   * @example\n   * ```js\n   * const stats = await ipfs.bitswap.stat()\n   * console.log(stats)\n   * ```\n   */\n  stat(options?: HTTPRPCOptions): Promise<BitswapStats>\n\n  /**\n   * Returns the wantlist for your node\n   *\n   * @example\n   * ```js\n   * const list = await ipfs.bitswap.wantlist()\n   * console.log(list)\n   * // [ CID('QmHash') ]\n   * ```\n   */\n  wantlist(options?: HTTPRPCOptions): Promise<CID[]>\n\n  /**\n   * Returns the wantlist for a connected peer\n   *\n   * @example\n   * ```js\n   * const list = await ipfs.bitswap.wantlistForPeer(peerId)\n   * console.log(list)\n   * // [ CID('QmHash') ]\n   * ```\n   */\n  wantlistForPeer(peerId: PeerId, options?: HTTPRPCOptions): Promise<CID[]>\n}\n\nexport function createBitswap (client: HTTPRPCClient): BitswapAPI {\n  return {\n    /**\n     * TODO: https://github.com/ipfs/js-kubo-rpc-client/issues/99\n     */\n    wantlist: createWantlist(client),\n    wantlistForPeer: createWantlistForPeer(client),\n    stat: createStat(client)\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,WAAW;AACtC,SAASC,qBAAqB,QAAQ,wBAAwB;AAC9D,SAASC,cAAc,QAAQ,eAAe;AAwD9C,OAAM,SAAUC,aAAaA,CAAEC,MAAqB;EAClD,OAAO;IACL;;;IAGAC,QAAQ,EAAEH,cAAc,CAACE,MAAM,CAAC;IAChCE,eAAe,EAAEL,qBAAqB,CAACG,MAAM,CAAC;IAC9CG,IAAI,EAAEP,UAAU,CAACI,MAAM;GACxB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}