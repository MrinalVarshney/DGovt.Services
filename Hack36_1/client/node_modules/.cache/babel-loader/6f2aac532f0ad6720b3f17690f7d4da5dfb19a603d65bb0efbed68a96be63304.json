{"ast":null,"code":"import { duplex } from './duplex.js';\n/**\n * Convert a [`Transform`](https://nodejs.org/dist/latest/docs/api/stream.html#class-streamtransform)\n * stream to an [iterable transform](https://achingbrain.github.io/it-stream-types/interfaces/Transform.html).\n */\nexport function transform(transform) {\n  return async function* (source) {\n    const d = duplex(transform);\n    // In a transform the sink and source are connected, an error in the sink\n    // will be thrown in the source also. Catch the sink error to avoid unhandled\n    // rejections and yield from the source.\n    let sinkError;\n    d.sink(source).catch(err => {\n      sinkError = err;\n    });\n    yield* d.source;\n    if (sinkError != null) {\n      throw sinkError;\n    }\n  };\n}","map":{"version":3,"names":["duplex","transform","source","d","sinkError","sink","catch","err"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/stream-to-it/src/transform.ts"],"sourcesContent":["import { duplex } from './duplex.js'\nimport type { Source, Transform } from 'it-stream-types'\nimport type { Duplex } from 'node:stream'\n\n/**\n * Convert a [`Transform`](https://nodejs.org/dist/latest/docs/api/stream.html#class-streamtransform)\n * stream to an [iterable transform](https://achingbrain.github.io/it-stream-types/interfaces/Transform.html).\n */\nexport function transform <Input = unknown, Output = Input> (transform: Duplex): Transform<Source<Input>, AsyncGenerator<Output>> {\n  return async function * (source: Source<Input>): AsyncGenerator<Output> {\n    const d = duplex<Output, Input>(transform)\n    // In a transform the sink and source are connected, an error in the sink\n    // will be thrown in the source also. Catch the sink error to avoid unhandled\n    // rejections and yield from the source.\n    let sinkError: Error | undefined\n\n    d.sink(source)\n      .catch((err: Error) => {\n        sinkError = err\n      })\n\n    yield * d.source\n\n    if (sinkError != null) {\n      throw sinkError\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AAIpC;;;;AAIA,OAAM,SAAUC,SAASA,CAAoCA,SAAiB;EAC5E,OAAO,iBAAkBC,MAAqB;IAC5C,MAAMC,CAAC,GAAGH,MAAM,CAAgBC,SAAS,CAAC;IAC1C;IACA;IACA;IACA,IAAIG,SAA4B;IAEhCD,CAAC,CAACE,IAAI,CAACH,MAAM,CAAC,CACXI,KAAK,CAAEC,GAAU,IAAI;MACpBH,SAAS,GAAGG,GAAG;IACjB,CAAC,CAAC;IAEJ,OAAQJ,CAAC,CAACD,MAAM;IAEhB,IAAIE,SAAS,IAAI,IAAI,EAAE;MACrB,MAAMA,SAAS;IACjB;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}