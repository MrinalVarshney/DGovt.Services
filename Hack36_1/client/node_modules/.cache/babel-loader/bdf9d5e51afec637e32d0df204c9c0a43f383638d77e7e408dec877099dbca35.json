{"ast":null,"code":"/**\n * @packageDocumentation\n *\n * Return the first value in an (async)iterable\n *\n * @example\n *\n * ```javascript\n * import first from 'it-first'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const res = first(values)\n *\n * console.info(res) // 0\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import first from 'it-first'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const res = await first(values())\n *\n * console.info(res) // 0\n * ```\n */\nfunction isAsyncIterable(thing) {\n  return thing[Symbol.asyncIterator] != null;\n}\nfunction first(source) {\n  if (isAsyncIterable(source)) {\n    return (async () => {\n      for await (const entry of source) {\n        // eslint-disable-line no-unreachable-loop\n        return entry;\n      }\n      return undefined;\n    })();\n  }\n  for (const entry of source) {\n    // eslint-disable-line no-unreachable-loop\n    return entry;\n  }\n  return undefined;\n}\nexport default first;","map":{"version":3,"names":["isAsyncIterable","thing","Symbol","asyncIterator","first","source","entry","undefined"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/it-first/src/index.ts"],"sourcesContent":["/**\n * @packageDocumentation\n *\n * Return the first value in an (async)iterable\n *\n * @example\n *\n * ```javascript\n * import first from 'it-first'\n *\n * // This can also be an iterator, generator, etc\n * const values = [0, 1, 2, 3, 4]\n *\n * const res = first(values)\n *\n * console.info(res) // 0\n * ```\n *\n * Async sources must be awaited:\n *\n * ```javascript\n * import first from 'it-first'\n *\n * const values = async function * () {\n *   yield * [0, 1, 2, 3, 4]\n * }\n *\n * const res = await first(values())\n *\n * console.info(res) // 0\n * ```\n */\n\nfunction isAsyncIterable <T> (thing: any): thing is AsyncIterable<T> {\n  return thing[Symbol.asyncIterator] != null\n}\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`\n */\nfunction first <T> (source: Iterable<T>): T | undefined\nfunction first <T> (source: Iterable<T> | AsyncIterable<T>): Promise<T | undefined>\nfunction first <T> (source: Iterable<T> | AsyncIterable<T>): Promise<T | undefined> | T | undefined {\n  if (isAsyncIterable(source)) {\n    return (async () => {\n      for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n        return entry\n      }\n\n      return undefined\n    })()\n  }\n\n  for (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nexport default first\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAASA,eAAeA,CAAMC,KAAU;EACtC,OAAOA,KAAK,CAACC,MAAM,CAACC,aAAa,CAAC,IAAI,IAAI;AAC5C;AAQA,SAASC,KAAKA,CAAMC,MAAsC;EACxD,IAAIL,eAAe,CAACK,MAAM,CAAC,EAAE;IAC3B,OAAO,CAAC,YAAW;MACjB,WAAW,MAAMC,KAAK,IAAID,MAAM,EAAE;QAAE;QAClC,OAAOC,KAAK;;MAGd,OAAOC,SAAS;IAClB,CAAC,EAAC,CAAE;;EAGN,KAAK,MAAMD,KAAK,IAAID,MAAM,EAAE;IAAE;IAC5B,OAAOC,KAAK;;EAGd,OAAOC,SAAS;AAClB;AAEA,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}