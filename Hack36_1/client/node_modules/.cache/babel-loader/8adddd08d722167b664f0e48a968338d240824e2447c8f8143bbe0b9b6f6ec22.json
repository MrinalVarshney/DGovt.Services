{"ast":null,"code":"import { peerIdFromString } from '@libp2p/peer-id';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { objectToCamel } from './lib/object-to-camel.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport function createId(client) {\n  return async function id(options = {}) {\n    const res = await client.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId != null ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    const output = {\n      ...objectToCamel(data)\n    };\n    output.id = peerIdFromString(output.id);\n    if (output.addresses != null) {\n      output.addresses = output.addresses.map(ma => multiaddr(ma));\n    }\n    return output;\n  };\n}","map":{"version":3,"names":["peerIdFromString","multiaddr","objectToCamel","toUrlSearchParams","createId","client","id","options","res","post","signal","searchParams","arg","peerId","toString","undefined","headers","data","json","output","addresses","map","ma"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/id.ts"],"sourcesContent":["import { peerIdFromString } from '@libp2p/peer-id'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { objectToCamel } from './lib/object-to-camel.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport type { KuboRPCClient } from './index.js'\nimport type { HTTPRPCClient } from './lib/core.js'\n\nexport function createId (client: HTTPRPCClient): KuboRPCClient['id'] {\n  return async function id (options = {}) {\n    const res = await client.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId != null ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    const output = {\n      ...objectToCamel<any>(data)\n    }\n\n    output.id = peerIdFromString(output.id)\n\n    if (output.addresses != null) {\n      output.addresses = output.addresses.map((ma: any) => multiaddr(ma))\n    }\n\n    return output\n  }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,iBAAiB,QAAQ,+BAA+B;AAIjE,OAAM,SAAUC,QAAQA,CAAEC,MAAqB;EAC7C,OAAO,eAAeC,EAAEA,CAAEC,OAAO,GAAG,EAAE;IACpC,MAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,IAAI,EAAE;MAClCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAER,iBAAiB,CAAC;QAC9BS,GAAG,EAAEL,OAAO,CAACM,MAAM,IAAI,IAAI,GAAGN,OAAO,CAACM,MAAM,CAACC,QAAQ,EAAE,GAAGC,SAAS;QACnE,GAAGR;OACJ,CAAC;MACFS,OAAO,EAAET,OAAO,CAACS;KAClB,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,EAAE;IAE7B,MAAMC,MAAM,GAAG;MACb,GAAGjB,aAAa,CAAMe,IAAI;KAC3B;IAEDE,MAAM,CAACb,EAAE,GAAGN,gBAAgB,CAACmB,MAAM,CAACb,EAAE,CAAC;IAEvC,IAAIa,MAAM,CAACC,SAAS,IAAI,IAAI,EAAE;MAC5BD,MAAM,CAACC,SAAS,GAAGD,MAAM,CAACC,SAAS,CAACC,GAAG,CAAEC,EAAO,IAAKrB,SAAS,CAACqB,EAAE,CAAC,CAAC;IACrE;IAEA,OAAOH,MAAM;EACf,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}