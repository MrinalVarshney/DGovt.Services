{"ast":null,"code":"import { createAdd } from './add.js';\nimport { createList } from './list.js';\nimport { createRm } from './rm.js';\nexport function createBootstrap(client) {\n  return {\n    add: createAdd(client),\n    list: createList(client),\n    rm: createRm(client)\n  };\n}","map":{"version":3,"names":["createAdd","createList","createRm","createBootstrap","client","add","list","rm"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/bootstrap/index.ts"],"sourcesContent":["import { createAdd } from './add.js'\nimport { createList } from './list.js'\nimport { createRm } from './rm.js'\nimport type { HTTPRPCOptions } from '../index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\nimport type { Multiaddr } from '@multiformats/multiaddr'\n\nexport interface BootstrapAPI {\n  /**\n   * Add a peer address to the bootstrap list\n   *\n   * @example\n   * ```js\n   * const validIp4 = '/ip4/104....9z'\n   *\n   * const res = await ipfs.bootstrap.add(validIp4)\n   * console.log(res.Peers)\n   * // Logs:\n   * // ['/ip4/104....9z']\n   * ```\n   */\n  add(addr: Multiaddr, options?: HTTPRPCOptions): Promise<{ Peers: Multiaddr[] }>\n\n  /**\n   * List all peer addresses in the bootstrap list\n   *\n   * @example\n   * ```js\n   * const res = await ipfs.bootstrap.list()\n   * console.log(res.Peers)\n   * // Logs:\n   * // [address1, address2, ...]\n   * ```\n   */\n  list(options?: HTTPRPCOptions): Promise<{ Peers: Multiaddr[] }>\n\n  /**\n   * Remove a peer address from the bootstrap list\n   *\n   * @example\n   * ```js\n   * const res = await ipfs.bootstrap.list()\n   * console.log(res.Peers)\n   * // Logs:\n   * // [address1, address2, ...]\n   * ```\n   */\n  rm(addr: Multiaddr, options?: HTTPRPCOptions): Promise<{ Peers: Multiaddr[] }>\n}\n\nexport function createBootstrap (client: HTTPRPCClient): BootstrapAPI {\n  return {\n    add: createAdd(client),\n    list: createList(client),\n    rm: createRm(client)\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,UAAU;AACpC,SAASC,UAAU,QAAQ,WAAW;AACtC,SAASC,QAAQ,QAAQ,SAAS;AAgDlC,OAAM,SAAUC,eAAeA,CAAEC,MAAqB;EACpD,OAAO;IACLC,GAAG,EAAEL,SAAS,CAACI,MAAM,CAAC;IACtBE,IAAI,EAAEL,UAAU,CAACG,MAAM,CAAC;IACxBG,EAAE,EAAEL,QAAQ,CAACE,MAAM;GACpB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}