{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js';\nexport const decodePin = ({\n  Name: name,\n  Status: status,\n  Cid: cid\n}) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  };\n};\nexport const encodeService = service => {\n  if (typeof service === 'string' && service !== '') {\n    return service;\n  } else {\n    throw new TypeError('service name must be passed');\n  }\n};\nexport const encodeCID = cid => {\n  if (CID.asCID(cid) != null) {\n    return cid.toString();\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`);\n  }\n};\nexport const encodeQuery = ({\n  service,\n  cid,\n  name,\n  status,\n  all\n}) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all === true ? true : undefined\n  });\n  if (cid != null) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value));\n    }\n  }\n  if (status != null) {\n    for (const value of status) {\n      query.append('status', value);\n    }\n  }\n  return query;\n};\nexport const encodeAddParams = (cid, {\n  service,\n  background,\n  name,\n  origins\n}) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background === true ? true : undefined\n  });\n  if (origins != null) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString());\n    }\n  }\n  return params;\n};","map":{"version":3,"names":["CID","toUrlSearchParams","decodePin","Name","name","Status","status","Cid","cid","parse","encodeService","service","TypeError","encodeCID","asCID","toString","encodeQuery","all","query","force","undefined","value","append","encodeAddParams","background","origins","params","arg","origin"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/pin/remote/utils.ts"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport type { PinRemoteAddOptions, RemotePin, RemotePinQuery } from './index.js'\n\nexport const decodePin = ({ Name: name, Status: status, Cid: cid }: any): RemotePin => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\nexport const encodeService = (service: any): string => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\nexport const encodeCID = (cid: any): string => {\n  if (CID.asCID(cid) != null) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\nexport const encodeQuery = ({ service, cid, name, status, all }: RemotePinQuery): URLSearchParams => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all === true ? true : undefined\n  })\n\n  if (cid != null) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status != null) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\nexport const encodeAddParams = (cid: CID, { service, background, name, origins }: PinRemoteAddOptions): URLSearchParams => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background === true ? true : undefined\n  })\n\n  if (origins != null) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,iBAAiB,QAAQ,mCAAmC;AAGrE,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI,EAAEC,IAAI;EAAEC,MAAM,EAAEC,MAAM;EAAEC,GAAG,EAAEC;AAAG,CAAO,KAAe;EACpF,OAAO;IACLA,GAAG,EAAER,GAAG,CAACS,KAAK,CAACD,GAAG,CAAC;IACnBJ,IAAI;IACJE;GACD;AACH,CAAC;AAED,OAAO,MAAMI,aAAa,GAAIC,OAAY,IAAY;EACpD,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,EAAE,EAAE;IACjD,OAAOA,OAAO;EAChB,CAAC,MAAM;IACL,MAAM,IAAIC,SAAS,CAAC,6BAA6B,CAAC;EACpD;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIL,GAAQ,IAAY;EAC5C,IAAIR,GAAG,CAACc,KAAK,CAACN,GAAG,CAAC,IAAI,IAAI,EAAE;IAC1B,OAAOA,GAAG,CAACO,QAAQ,EAAE;EACvB,CAAC,MAAM;IACL,MAAM,IAAIH,SAAS,CAAC,oCAAoC,OAAOJ,GAAG,EAAE,CAAC;EACvE;AACF,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAGA,CAAC;EAAEL,OAAO;EAAEH,GAAG;EAAEJ,IAAI;EAAEE,MAAM;EAAEW;AAAG,CAAkB,KAAqB;EAClG,MAAMC,KAAK,GAAGjB,iBAAiB,CAAC;IAC9BU,OAAO,EAAED,aAAa,CAACC,OAAO,CAAC;IAC/BP,IAAI;IACJe,KAAK,EAAEF,GAAG,KAAK,IAAI,GAAG,IAAI,GAAGG;GAC9B,CAAC;EAEF,IAAIZ,GAAG,IAAI,IAAI,EAAE;IACf,KAAK,MAAMa,KAAK,IAAIb,GAAG,EAAE;MACvBU,KAAK,CAACI,MAAM,CAAC,KAAK,EAAET,SAAS,CAACQ,KAAK,CAAC,CAAC;IACvC;EACF;EAEA,IAAIf,MAAM,IAAI,IAAI,EAAE;IAClB,KAAK,MAAMe,KAAK,IAAIf,MAAM,EAAE;MAC1BY,KAAK,CAACI,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC;IAC/B;EACF;EAEA,OAAOH,KAAK;AACd,CAAC;AAED,OAAO,MAAMK,eAAe,GAAGA,CAACf,GAAQ,EAAE;EAAEG,OAAO;EAAEa,UAAU;EAAEpB,IAAI;EAAEqB;AAAO,CAAuB,KAAqB;EACxH,MAAMC,MAAM,GAAGzB,iBAAiB,CAAC;IAC/B0B,GAAG,EAAEd,SAAS,CAACL,GAAG,CAAC;IACnBG,OAAO,EAAED,aAAa,CAACC,OAAO,CAAC;IAC/BP,IAAI;IACJoB,UAAU,EAAEA,UAAU,KAAK,IAAI,GAAG,IAAI,GAAGJ;GAC1C,CAAC;EAEF,IAAIK,OAAO,IAAI,IAAI,EAAE;IACnB,KAAK,MAAMG,MAAM,IAAIH,OAAO,EAAE;MAC5BC,MAAM,CAACJ,MAAM,CAAC,QAAQ,EAAEM,MAAM,CAACb,QAAQ,EAAE,CAAC;IAC5C;EACF;EAEA,OAAOW,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}