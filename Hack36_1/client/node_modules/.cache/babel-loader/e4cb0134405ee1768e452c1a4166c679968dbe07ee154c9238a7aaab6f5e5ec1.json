{"ast":null,"code":"import { peerIdFromString } from '@libp2p/peer-id';\nimport { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport function createStat(client) {\n  return async function stat(options = {}) {\n    const res = await client.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  };\n}\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist ?? []).map(k => CID.parse(k['/'])),\n    peers: (res.Peers ?? []).map(str => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  };\n}","map":{"version":3,"names":["peerIdFromString","CID","toUrlSearchParams","createStat","client","stat","options","res","post","searchParams","signal","headers","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","parse","peers","Peers","str","blocksReceived","BigInt","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/bitswap/stat.ts"],"sourcesContent":["import { peerIdFromString } from '@libp2p/peer-id'\nimport { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport type { BitswapStats, BitswapAPI } from './index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport function createStat (client: HTTPRPCClient): BitswapAPI['stat'] {\n  return async function stat (options = {}) {\n    const res = await client.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n}\n\nfunction toCoreInterface (res: any): BitswapStats {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist ?? []).map((k: any) => CID.parse(k['/'])),\n    peers: (res.Peers ?? []).map((str: any) => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,GAAG,QAAQ,kBAAkB;AACtC,SAASC,iBAAiB,QAAQ,gCAAgC;AAIlE,OAAM,SAAUC,UAAUA,CAAEC,MAAqB;EAC/C,OAAO,eAAeC,IAAIA,CAAEC,OAAO,GAAG,EAAE;IACtC,MAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,cAAc,EAAE;MAC5CC,YAAY,EAAEP,iBAAiB,CAACI,OAAO,CAAC;MACxCI,MAAM,EAAEJ,OAAO,CAACI,MAAM;MACtBC,OAAO,EAAEL,OAAO,CAACK;KAClB,CAAC;IAEF,OAAOC,eAAe,CAAC,MAAML,GAAG,CAACM,IAAI,EAAE,CAAC;EAC1C,CAAC;AACH;AAEA,SAASD,eAAeA,CAAEL,GAAQ;EAChC,OAAO;IACLO,aAAa,EAAEP,GAAG,CAACQ,aAAa;IAChCC,QAAQ,EAAE,CAACT,GAAG,CAACU,QAAQ,IAAI,EAAE,EAAEC,GAAG,CAAEC,CAAM,IAAKlB,GAAG,CAACmB,KAAK,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjEE,KAAK,EAAE,CAACd,GAAG,CAACe,KAAK,IAAI,EAAE,EAAEJ,GAAG,CAAEK,GAAQ,IAAKvB,gBAAgB,CAACuB,GAAG,CAAC,CAAC;IACjEC,cAAc,EAAEC,MAAM,CAAClB,GAAG,CAACmB,cAAc,CAAC;IAC1CC,YAAY,EAAEF,MAAM,CAAClB,GAAG,CAACqB,YAAY,CAAC;IACtCC,UAAU,EAAEJ,MAAM,CAAClB,GAAG,CAACuB,UAAU,CAAC;IAClCC,QAAQ,EAAEN,MAAM,CAAClB,GAAG,CAACyB,QAAQ,CAAC;IAC9BC,eAAe,EAAER,MAAM,CAAClB,GAAG,CAAC2B,eAAe,CAAC;IAC5CC,eAAe,EAAEV,MAAM,CAAClB,GAAG,CAAC6B,eAAe;GAC5C;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}