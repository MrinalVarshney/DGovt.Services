{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport function createStat(client) {\n  return async function stat(cid, options = {}) {\n    const res = await client.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: CID.parse(data.Key),\n      size: data.Size\n    };\n  };\n}","map":{"version":3,"names":["CID","toUrlSearchParams","createStat","client","stat","cid","options","res","post","signal","searchParams","arg","toString","headers","data","json","parse","Key","size","Size"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/block/stat.ts"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport type { BlockAPI } from './index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport function createStat (client: HTTPRPCClient): BlockAPI['stat'] {\n  return async function stat (cid, options = {}) {\n    const res = await client.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Key), size: data.Size }\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,iBAAiB,QAAQ,gCAAgC;AAIlE,OAAM,SAAUC,UAAUA,CAAEC,MAAqB;EAC/C,OAAO,eAAeC,IAAIA,CAAEC,GAAG,EAAEC,OAAO,GAAG,EAAE;IAC3C,MAAMC,GAAG,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;MAC1CC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAEN,GAAG,CAACO,QAAQ,EAAE;QACnB,GAAGN;OACJ,CAAC;MACFO,OAAO,EAAEP,OAAO,CAACO;KAClB,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,EAAE;IAE7B,OAAO;MAAEV,GAAG,EAAEL,GAAG,CAACgB,KAAK,CAACF,IAAI,CAACG,GAAG,CAAC;MAAEC,IAAI,EAAEJ,IAAI,CAACK;IAAI,CAAE;EACtD,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}