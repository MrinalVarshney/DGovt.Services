{"ast":null,"code":"import { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport function createResolve(client) {\n  return async function* resolve(path, options = {}) {\n    const res = await client.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const result of res.ndjson()) {\n      yield result.Path;\n    }\n  };\n}","map":{"version":3,"names":["toUrlSearchParams","createResolve","client","resolve","path","options","res","post","signal","searchParams","arg","stream","headers","result","ndjson","Path"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/name/resolve.ts"],"sourcesContent":["import { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport type { NameAPI } from './index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport function createResolve (client: HTTPRPCClient): NameAPI['resolve'] {\n  return async function * resolve (path, options = {}) {\n    const res = await client.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      yield result.Path\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,gCAAgC;AAIlE,OAAM,SAAUC,aAAaA,CAAEC,MAAqB;EAClD,OAAO,gBAAiBC,OAAOA,CAAEC,IAAI,EAAEC,OAAO,GAAG,EAAE;IACjD,MAAMC,GAAG,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAC,cAAc,EAAE;MAC5CC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAEN,IAAI;QACTO,MAAM,EAAE,IAAI;QACZ,GAAGN;OACJ,CAAC;MACFO,OAAO,EAAEP,OAAO,CAACO;KAClB,CAAC;IAEF,WAAW,MAAMC,MAAM,IAAIP,GAAG,CAACQ,MAAM,EAAE,EAAE;MACvC,MAAMD,MAAM,CAACE,IAAI;IACnB;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}