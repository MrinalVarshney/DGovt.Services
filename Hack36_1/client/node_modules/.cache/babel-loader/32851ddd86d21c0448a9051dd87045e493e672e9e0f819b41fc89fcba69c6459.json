{"ast":null,"code":"export function truncatePeerId(peerId, options = {}) {\n  const prefixLength = options.prefixLength ?? 2;\n  const suffixLength = options.suffixLength ?? 4;\n  const peerIdString = peerId.toString();\n  return `${peerIdString.substring(0, prefixLength)}…${peerIdString.substring(peerIdString.length, peerIdString.length - suffixLength)}`;\n}","map":{"version":3,"names":["truncatePeerId","peerId","options","prefixLength","suffixLength","peerIdString","toString","substring","length"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/@libp2p/logger/src/utils.ts"],"sourcesContent":["import type { PeerLoggerOptions } from './index.js'\nimport type { PeerId } from '@libp2p/interface'\n\nexport function truncatePeerId (peerId: PeerId, options: Partial<PeerLoggerOptions> = {}): string {\n  const prefixLength = options.prefixLength ?? 2\n  const suffixLength = options.suffixLength ?? 4\n\n  const peerIdString = peerId.toString()\n  return `${peerIdString.substring(0, prefixLength)}…${peerIdString.substring(peerIdString.length, peerIdString.length - suffixLength)}`\n}\n"],"mappings":"AAGA,OAAM,SAAUA,cAAcA,CAAEC,MAAc,EAAEC,OAAA,GAAsC,EAAE;EACtF,MAAMC,YAAY,GAAGD,OAAO,CAACC,YAAY,IAAI,CAAC;EAC9C,MAAMC,YAAY,GAAGF,OAAO,CAACE,YAAY,IAAI,CAAC;EAE9C,MAAMC,YAAY,GAAGJ,MAAM,CAACK,QAAQ,EAAE;EACtC,OAAO,GAAGD,YAAY,CAACE,SAAS,CAAC,CAAC,EAAEJ,YAAY,CAAC,IAAIE,YAAY,CAACE,SAAS,CAACF,YAAY,CAACG,MAAM,EAAEH,YAAY,CAACG,MAAM,GAAGJ,YAAY,CAAC,EAAE;AACxI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}