{"ast":null,"code":"import { anySignal } from 'any-signal';\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js';\nimport { multipartRequest } from '../lib/multipart-request.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport function createPublish(client) {\n  return async function publish(topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    });\n    // allow aborting requests on body errors\n    const controller = new AbortController();\n    const signal = anySignal([controller.signal, options.signal]);\n    try {\n      const res = await client.post('pubsub/pub', {\n        signal,\n        searchParams,\n        ...(await multipartRequest([data], controller, options.headers))\n      });\n      await res.text();\n    } finally {\n      signal.clear();\n    }\n  };\n}","map":{"version":3,"names":["anySignal","textToUrlSafeRpc","multipartRequest","toUrlSearchParams","createPublish","client","publish","topic","data","options","searchParams","arg","controller","AbortController","signal","res","post","headers","text","clear"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/pubsub/publish.ts"],"sourcesContent":["import { anySignal } from 'any-signal'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\nimport { multipartRequest } from '../lib/multipart-request.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport type { PubSubAPI } from './index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport function createPublish (client: HTTPRPCClient): PubSubAPI['publish'] {\n  return async function publish (topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    })\n\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    try {\n      const res = await client.post('pubsub/pub', {\n        signal,\n        searchParams,\n        ...(\n          await multipartRequest([data], controller, options.headers)\n        )\n      })\n\n      await res.text()\n    } finally {\n      signal.clear()\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,iBAAiB,QAAQ,gCAAgC;AAIlE,OAAM,SAAUC,aAAaA,CAAEC,MAAqB;EAClD,OAAO,eAAeC,OAAOA,CAAEC,KAAK,EAAEC,IAAI,EAAEC,OAAO,GAAG,EAAE;IACtD,MAAMC,YAAY,GAAGP,iBAAiB,CAAC;MACrCQ,GAAG,EAAEV,gBAAgB,CAACM,KAAK,CAAC;MAC5B,GAAGE;KACJ,CAAC;IAEF;IACA,MAAMG,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxC,MAAMC,MAAM,GAAGd,SAAS,CAAC,CAACY,UAAU,CAACE,MAAM,EAAEL,OAAO,CAACK,MAAM,CAAC,CAAC;IAE7D,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMV,MAAM,CAACW,IAAI,CAAC,YAAY,EAAE;QAC1CF,MAAM;QACNJ,YAAY;QACZ,IACE,MAAMR,gBAAgB,CAAC,CAACM,IAAI,CAAC,EAAEI,UAAU,EAAEH,OAAO,CAACQ,OAAO,CAAC;OAE9D,CAAC;MAEF,MAAMF,GAAG,CAACG,IAAI,EAAE;IAClB,CAAC,SAAS;MACRJ,MAAM,CAACK,KAAK,EAAE;IAChB;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}