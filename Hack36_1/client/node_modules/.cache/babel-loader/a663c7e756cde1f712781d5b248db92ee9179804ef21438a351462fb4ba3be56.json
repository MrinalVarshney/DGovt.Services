{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\nexport function createGet(client) {\n  return async function* get(path, options = {}) {\n    const opts = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    };\n    const res = await client.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    });\n    yield* res.iterator();\n  };\n}","map":{"version":3,"names":["CID","toUrlSearchParams","createGet","client","get","path","options","opts","arg","Uint8Array","decode","res","post","signal","searchParams","headers","iterator"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/get.ts"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport type { KuboRPCClient } from './index.js'\nimport type { HTTPRPCClient } from './lib/core.js'\n\nexport function createGet (client: HTTPRPCClient): KuboRPCClient['get'] {\n  return async function * get (path, options = {}) {\n    const opts: Record<string, any> = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    }\n\n    const res = await client.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,iBAAiB,QAAQ,+BAA+B;AAIjE,OAAM,SAAUC,SAASA,CAAEC,MAAqB;EAC9C,OAAO,gBAAiBC,GAAGA,CAAEC,IAAI,EAAEC,OAAO,GAAG,EAAE;IAC7C,MAAMC,IAAI,GAAwB;MAChCC,GAAG,EAAE,GAAGH,IAAI,YAAYI,UAAU,GAAGT,GAAG,CAACU,MAAM,CAACL,IAAI,CAAC,GAAGA,IAAI,EAAE;MAC9D,GAAGC;KACJ;IAED,MAAMK,GAAG,GAAG,MAAMR,MAAM,CAACS,IAAI,CAAC,KAAK,EAAE;MACnCC,MAAM,EAAEP,OAAO,CAACO,MAAM;MACtBC,YAAY,EAAEb,iBAAiB,CAACM,IAAI,CAAC;MACrCQ,OAAO,EAAET,OAAO,CAACS;KAClB,CAAC;IAEF,OAAQJ,GAAG,CAACK,QAAQ,EAAE;EACxB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}