{"ast":null,"code":"import { CodeError } from '@libp2p/interface';\nexport function isBytes(obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\nexport function isBlob(obj) {\n  return obj.constructor != null && (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') && typeof obj.stream === 'function';\n}\n/**\n * An object with a path or content property\n */\nexport function isFileObject(obj) {\n  return typeof obj === 'object' && (obj.path != null || obj.content != null);\n}\nexport function isReadableStream(value) {\n  return typeof value?.getReader === 'function';\n}\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'string') {\n    mode = parseInt(mode, 8);\n  }\n  return mode & 0xFFF;\n}\nfunction isMtime(obj) {\n  return Object.prototype.hasOwnProperty.call(obj, 'secs');\n}\nfunction isTimeSpec(obj) {\n  return Object.prototype.hasOwnProperty.call(obj, 'Seconds');\n}\nfunction isHrtime(obj) {\n  return Array.isArray(obj);\n}\nexport function parseMtime(mtime) {\n  if (mtime == null) {\n    return undefined;\n  }\n  // { secs, nsecs }\n  if (isMtime(mtime)) {\n    mtime = {\n      secs: mtime.secs,\n      nsecs: mtime.nsecs\n    };\n  }\n  // UnixFS TimeSpec\n  if (isTimeSpec(mtime)) {\n    mtime = {\n      secs: BigInt(mtime.Seconds),\n      nsecs: mtime.FractionalNanoseconds\n    };\n  }\n  // process.hrtime()\n  if (isHrtime(mtime)) {\n    mtime = {\n      secs: BigInt(mtime[0]),\n      nsecs: mtime[1]\n    };\n  }\n  // Javascript Date\n  if (mtime instanceof Date) {\n    const ms = mtime.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: BigInt(secs),\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  // process.hrtime.bigint()\n  if (typeof mtime === 'bigint') {\n    const secs = mtime / BigInt(1e9);\n    const nsecs = mtime - secs * BigInt(1e9);\n    mtime = {\n      secs,\n      nsecs: Number(nsecs)\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw new CodeError('mtime-nsecs must be within the range [0,999999999]', 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}","map":{"version":3,"names":["CodeError","isBytes","obj","ArrayBuffer","isView","isBlob","constructor","name","stream","isFileObject","path","content","isReadableStream","value","getReader","parseMode","mode","undefined","parseInt","isMtime","Object","prototype","hasOwnProperty","call","isTimeSpec","isHrtime","Array","isArray","parseMtime","mtime","secs","nsecs","BigInt","Seconds","FractionalNanoseconds","Date","ms","getTime","Math","floor","Number"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/lib/files/utils.ts"],"sourcesContent":["import { CodeError } from '@libp2p/interface'\nimport type { ImportCandidate } from '../../index.js'\nimport type { Mtime, MtimeLike } from 'ipfs-unixfs'\n\nexport function isBytes (obj: any): obj is ArrayBufferView | ArrayBuffer {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\nexport function isBlob (obj: any): obj is Blob {\n  return obj.constructor != null &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n */\nexport function isFileObject (obj: any): obj is ImportCandidate {\n  return typeof obj === 'object' && (obj.path != null || obj.content != null)\n}\n\nexport function isReadableStream (value: any): value is ReadableStream {\n  return typeof value?.getReader === 'function'\n}\n\nexport function parseMode (mode?: string | number | undefined): number | undefined {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    mode = parseInt(mode, 8)\n  }\n\n  return mode & 0xFFF\n}\n\nfunction isMtime (obj: any): obj is Mtime {\n  return Object.prototype.hasOwnProperty.call(obj, 'secs')\n}\n\nfunction isTimeSpec (obj: any): obj is { Seconds: number, FractionalNanoseconds?: number } {\n  return Object.prototype.hasOwnProperty.call(obj, 'Seconds')\n}\n\nfunction isHrtime (obj: any): obj is [number, number] {\n  return Array.isArray(obj)\n}\n\nexport function parseMtime (mtime?: MtimeLike): Mtime | undefined {\n  if (mtime == null) {\n    return undefined\n  }\n\n  // { secs, nsecs }\n  if (isMtime(mtime)) {\n    mtime = {\n      secs: mtime.secs,\n      nsecs: mtime.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (isTimeSpec(mtime)) {\n    mtime = {\n      secs: BigInt(mtime.Seconds),\n      nsecs: mtime.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (isHrtime(mtime)) {\n    mtime = {\n      secs: BigInt(mtime[0]),\n      nsecs: mtime[1]\n    }\n  }\n\n  // Javascript Date\n  if (mtime instanceof Date) {\n    const ms = mtime.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: BigInt(secs),\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  // process.hrtime.bigint()\n  if (typeof mtime === 'bigint') {\n    const secs = mtime / BigInt(1e9)\n    const nsecs = mtime - (secs * BigInt(1e9))\n\n    mtime = {\n      secs,\n      nsecs: Number(nsecs)\n    }\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw new CodeError('mtime-nsecs must be within the range [0,999999999]', 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}