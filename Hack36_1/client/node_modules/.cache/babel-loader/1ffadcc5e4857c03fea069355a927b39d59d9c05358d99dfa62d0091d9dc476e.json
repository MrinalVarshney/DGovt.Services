{"ast":null,"code":"import { peerIdFromString } from '@libp2p/peer-id';\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport function createPeers(client) {\n  return async function peers(options = {}) {\n    const res = await client.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const body = await res.json();\n    return (body.Peers ?? []).map(peer => {\n      return {\n        addr: multiaddr(peer.Addr),\n        peer: peerIdFromString(peer.Peer),\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        // eslint-disable-next-line no-nested-ternary\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      };\n    });\n  };\n}","map":{"version":3,"names":["peerIdFromString","multiaddr","toUrlSearchParams","createPeers","client","peers","options","res","post","signal","searchParams","headers","body","json","Peers","map","peer","addr","Addr","Peer","muxer","Muxer","latency","Latency","streams","Streams","direction","Direction","undefined"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/swarm/peers.ts"],"sourcesContent":["import { peerIdFromString } from '@libp2p/peer-id'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport type { SwarmAPI } from './index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport function createPeers (client: HTTPRPCClient): SwarmAPI['peers'] {\n  return async function peers (options = {}) {\n    const res = await client.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const body = await res.json()\n\n    return (body.Peers ?? []).map((peer: any) => {\n      return {\n        addr: multiaddr(peer.Addr),\n        peer: peerIdFromString(peer.Peer),\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        // eslint-disable-next-line no-nested-ternary\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      }\n    })\n  }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,iBAAiB,QAAQ,gCAAgC;AAIlE,OAAM,SAAUC,WAAWA,CAAEC,MAAqB;EAChD,OAAO,eAAeC,KAAKA,CAAEC,OAAO,GAAG,EAAE;IACvC,MAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,IAAI,CAAC,aAAa,EAAE;MAC3CC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAER,iBAAiB,CAACI,OAAO,CAAC;MACxCK,OAAO,EAAEL,OAAO,CAACK;KAClB,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;IAE7B,OAAO,CAACD,IAAI,CAACE,KAAK,IAAI,EAAE,EAAEC,GAAG,CAAEC,IAAS,IAAI;MAC1C,OAAO;QACLC,IAAI,EAAEhB,SAAS,CAACe,IAAI,CAACE,IAAI,CAAC;QAC1BF,IAAI,EAAEhB,gBAAgB,CAACgB,IAAI,CAACG,IAAI,CAAC;QACjCC,KAAK,EAAEJ,IAAI,CAACK,KAAK;QACjBC,OAAO,EAAEN,IAAI,CAACO,OAAO;QACrBC,OAAO,EAAER,IAAI,CAACS,OAAO;QACrB;QACAC,SAAS,EAAEV,IAAI,CAACW,SAAS,IAAI,IAAI,GAAGC,SAAS,GAAGZ,IAAI,CAACW,SAAS,KAAK,CAAC,GAAG,SAAS,GAAG;OACpF;IACH,CAAC,CAAC;EACJ,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}