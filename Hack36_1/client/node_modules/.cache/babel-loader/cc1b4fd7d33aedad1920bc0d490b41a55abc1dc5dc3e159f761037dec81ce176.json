{"ast":null,"code":"export function encodeEndpoint(url) {\n  const href = String(url);\n  if (href === 'undefined') {\n    throw Error('endpoint is required');\n  }\n  // Workaround trailing `/` issue in go-ipfs\n  // @see https://github.com/ipfs/go-ipfs/issues/7826\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href;\n}\nexport function decodeRemoteService(json) {\n  const service = {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint)\n  };\n  if (json.Stat != null) {\n    service.stat = decodeStat(json.Stat);\n  }\n  return service;\n}\nexport function decodeStat(json) {\n  switch (json.Status) {\n    case 'valid':\n      {\n        const {\n          Pinning,\n          Pinned,\n          Queued,\n          Failed\n        } = json.PinCount;\n        return {\n          status: 'valid',\n          pinCount: {\n            queued: Queued,\n            pinning: Pinning,\n            pinned: Pinned,\n            failed: Failed\n          }\n        };\n      }\n    case 'invalid':\n      {\n        return {\n          status: 'invalid'\n        };\n      }\n    default:\n      {\n        return {\n          status: json.Status\n        };\n      }\n  }\n}","map":{"version":3,"names":["encodeEndpoint","url","href","String","Error","length","slice","decodeRemoteService","json","service","Service","endpoint","URL","ApiEndpoint","Stat","stat","decodeStat","Status","Pinning","Pinned","Queued","Failed","PinCount","status","pinCount","queued","pinning","pinned","failed"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/pin/remote/service/utils.ts"],"sourcesContent":["import type { RemotePinServiceWithStat, Stat } from './index.js'\n\nexport function encodeEndpoint (url: URL): string {\n  const href = String(url)\n  if (href === 'undefined') {\n    throw Error('endpoint is required')\n  }\n  // Workaround trailing `/` issue in go-ipfs\n  // @see https://github.com/ipfs/go-ipfs/issues/7826\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href\n}\n\nexport function decodeRemoteService (json: any): RemotePinServiceWithStat {\n  const service: RemotePinServiceWithStat = {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint)\n  }\n\n  if (json.Stat != null) {\n    service.stat = decodeStat(json.Stat)\n  }\n\n  return service\n}\n\nexport function decodeStat (json: any): Stat {\n  switch (json.Status) {\n    case 'valid': {\n      const { Pinning, Pinned, Queued, Failed } = json.PinCount\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      }\n    }\n    case 'invalid': {\n      return { status: 'invalid' }\n    }\n    default: {\n      return { status: json.Status }\n    }\n  }\n}\n"],"mappings":"AAEA,OAAM,SAAUA,cAAcA,CAAEC,GAAQ;EACtC,MAAMC,IAAI,GAAGC,MAAM,CAACF,GAAG,CAAC;EACxB,IAAIC,IAAI,KAAK,WAAW,EAAE;IACxB,MAAME,KAAK,CAAC,sBAAsB,CAAC;EACrC;EACA;EACA;EACA,OAAOF,IAAI,CAACA,IAAI,CAACG,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGJ,IAAI;AACjE;AAEA,OAAM,SAAUK,mBAAmBA,CAAEC,IAAS;EAC5C,MAAMC,OAAO,GAA6B;IACxCA,OAAO,EAAED,IAAI,CAACE,OAAO;IACrBC,QAAQ,EAAE,IAAIC,GAAG,CAACJ,IAAI,CAACK,WAAW;GACnC;EAED,IAAIL,IAAI,CAACM,IAAI,IAAI,IAAI,EAAE;IACrBL,OAAO,CAACM,IAAI,GAAGC,UAAU,CAACR,IAAI,CAACM,IAAI,CAAC;EACtC;EAEA,OAAOL,OAAO;AAChB;AAEA,OAAM,SAAUO,UAAUA,CAAER,IAAS;EACnC,QAAQA,IAAI,CAACS,MAAM;IACjB,KAAK,OAAO;MAAE;QACZ,MAAM;UAAEC,OAAO;UAAEC,MAAM;UAAEC,MAAM;UAAEC;QAAM,CAAE,GAAGb,IAAI,CAACc,QAAQ;QACzD,OAAO;UACLC,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAE;YACRC,MAAM,EAAEL,MAAM;YACdM,OAAO,EAAER,OAAO;YAChBS,MAAM,EAAER,MAAM;YACdS,MAAM,EAAEP;;SAEX;MACH;IACA,KAAK,SAAS;MAAE;QACd,OAAO;UAAEE,MAAM,EAAE;QAAS,CAAE;MAC9B;IACA;MAAS;QACP,OAAO;UAAEA,MAAM,EAAEf,IAAI,CAACS;QAAM,CAAE;MAChC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}