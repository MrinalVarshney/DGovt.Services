{"ast":null,"code":"import { createCmds } from './cmds.js';\nimport { createNet } from './net.js';\nimport { createSys } from './sys.js';\nexport function createDiag(client) {\n  return {\n    cmds: createCmds(client),\n    net: createNet(client),\n    sys: createSys(client)\n  };\n}","map":{"version":3,"names":["createCmds","createNet","createSys","createDiag","client","cmds","net","sys"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/diag/index.ts"],"sourcesContent":["import { createCmds } from './cmds.js'\nimport { createNet } from './net.js'\nimport { createSys } from './sys.js'\nimport type { HTTPRPCOptions } from '../index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport interface DiagCmdsResult {\n  active: boolean\n  args: string[]\n  endTime: Date\n  id: string\n  options: Record<string, any>\n  startTime: Date\n}\n\nexport interface DiagAPI {\n  cmds(options?: HTTPRPCOptions): Promise<DiagCmdsResult[]>\n  net(options?: HTTPRPCOptions): Promise<any>\n  sys(options?: HTTPRPCOptions): Promise<any>\n}\n\nexport function createDiag (client: HTTPRPCClient): DiagAPI {\n  return {\n    cmds: createCmds(client),\n    net: createNet(client),\n    sys: createSys(client)\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,WAAW;AACtC,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,SAAS,QAAQ,UAAU;AAmBpC,OAAM,SAAUC,UAAUA,CAAEC,MAAqB;EAC/C,OAAO;IACLC,IAAI,EAAEL,UAAU,CAACI,MAAM,CAAC;IACxBE,GAAG,EAAEL,SAAS,CAACG,MAAM,CAAC;IACtBG,GAAG,EAAEL,SAAS,CAACE,MAAM;GACtB;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}