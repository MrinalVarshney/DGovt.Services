{"ast":null,"code":"import { source } from 'stream-to-it';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport function createRead(client) {\n  return async function* read(path, options = {}) {\n    const res = await client.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    });\n    if (res.body == null) {\n      throw new Error('Invalid response body');\n    }\n    yield* source(res.body);\n  };\n}","map":{"version":3,"names":["source","toUrlSearchParams","createRead","client","read","path","options","res","post","signal","searchParams","arg","count","length","headers","body","Error"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/files/read.ts"],"sourcesContent":["import { source } from 'stream-to-it'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport type { FilesAPI } from './index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport function createRead (client: HTTPRPCClient): FilesAPI['read'] {\n  return async function * read (path, options = {}) {\n    const res = await client.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    if (res.body == null) {\n      throw new Error('Invalid response body')\n    }\n\n    yield * source(res.body)\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AACrC,SAASC,iBAAiB,QAAQ,gCAAgC;AAIlE,OAAM,SAAUC,UAAUA,CAAEC,MAAqB;EAC/C,OAAO,gBAAiBC,IAAIA,CAAEC,IAAI,EAAEC,OAAO,GAAG,EAAE;IAC9C,MAAMC,GAAG,GAAG,MAAMJ,MAAM,CAACK,IAAI,CAAC,YAAY,EAAE;MAC1CC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAEN,IAAI;QACTO,KAAK,EAAEN,OAAO,CAACO,MAAM;QACrB,GAAGP;OACJ,CAAC;MACFQ,OAAO,EAAER,OAAO,CAACQ;KAClB,CAAC;IAEF,IAAIP,GAAG,CAACQ,IAAI,IAAI,IAAI,EAAE;MACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,OAAQhB,MAAM,CAACO,GAAG,CAACQ,IAAI,CAAC;EAC1B,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}