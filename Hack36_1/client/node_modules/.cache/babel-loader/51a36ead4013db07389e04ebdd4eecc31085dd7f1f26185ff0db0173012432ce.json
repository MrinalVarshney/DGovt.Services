{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { normaliseInput } from '../lib/pins/normalise-input.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport function createAddAll(client) {\n  return async function* addAll(source, options = {}) {\n    for await (const {\n      path,\n      recursive,\n      metadata\n    } of normaliseInput(source)) {\n      const res = await client.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata != null ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      });\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins != null) {\n          // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid);\n          }\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        yield CID.parse(pin);\n      }\n    }\n  };\n}","map":{"version":3,"names":["CID","normaliseInput","toUrlSearchParams","createAddAll","client","addAll","source","options","path","recursive","metadata","res","post","signal","searchParams","arg","JSON","stringify","undefined","stream","headers","pin","ndjson","Pins","cid","parse"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/pin/add-all.ts"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { normaliseInput } from '../lib/pins/normalise-input.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport type { PinAPI } from './index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport function createAddAll (client: HTTPRPCClient): PinAPI['addAll'] {\n  return async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await client.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata != null ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins != null) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          // eslint-disable-next-line no-continue\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,iBAAiB,QAAQ,gCAAgC;AAIlE,OAAM,SAAUC,YAAYA,CAAEC,MAAqB;EACjD,OAAO,gBAAiBC,MAAMA,CAAEC,MAAM,EAAEC,OAAO,GAAG,EAAE;IAClD,WAAW,MAAM;MAAEC,IAAI;MAAEC,SAAS;MAAEC;IAAQ,CAAE,IAAIT,cAAc,CAACK,MAAM,CAAC,EAAE;MACxE,MAAMK,GAAG,GAAG,MAAMP,MAAM,CAACQ,IAAI,CAAC,SAAS,EAAE;QACvCC,MAAM,EAAEN,OAAO,CAACM,MAAM;QACtBC,YAAY,EAAEZ,iBAAiB,CAAC;UAC9B,GAAGK,OAAO;UACVQ,GAAG,EAAEP,IAAI;UACTC,SAAS;UACTC,QAAQ,EAAEA,QAAQ,IAAI,IAAI,GAAGM,IAAI,CAACC,SAAS,CAACP,QAAQ,CAAC,GAAGQ,SAAS;UACjEC,MAAM,EAAE;SACT,CAAC;QACFC,OAAO,EAAEb,OAAO,CAACa;OAClB,CAAC;MAEF,WAAW,MAAMC,GAAG,IAAIV,GAAG,CAACW,MAAM,EAAE,EAAE;QACpC,IAAID,GAAG,CAACE,IAAI,IAAI,IAAI,EAAE;UAAE;UACtB,KAAK,MAAMC,GAAG,IAAIH,GAAG,CAACE,IAAI,EAAE;YAC1B,MAAMvB,GAAG,CAACyB,KAAK,CAACD,GAAG,CAAC;UACtB;UACA;UACA;QACF;QAEA,MAAMxB,GAAG,CAACyB,KAAK,CAACJ,GAAG,CAAC;MACtB;IACF;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}