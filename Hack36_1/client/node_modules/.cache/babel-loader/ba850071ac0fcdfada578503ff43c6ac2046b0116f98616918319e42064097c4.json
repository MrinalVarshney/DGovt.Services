{"ast":null,"code":"import { anySignal } from 'any-signal';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { mapEvent } from '../dht/map-event.js';\nimport { multipartRequest } from '../lib/multipart-request.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nexport function createPut(client) {\n  return async function* put(key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController();\n    const signal = anySignal([controller.signal, options.signal]);\n    try {\n      const res = await client.post('routing/put', {\n        signal,\n        searchParams: toUrlSearchParams({\n          arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n          stream: true,\n          ...options\n        }),\n        ...(await multipartRequest([value], controller, options.headers))\n      });\n      for await (const event of res.ndjson()) {\n        yield mapEvent(event);\n      }\n    } finally {\n      signal.clear();\n    }\n  };\n}","map":{"version":3,"names":["anySignal","toString","uint8ArrayToString","mapEvent","multipartRequest","toUrlSearchParams","createPut","client","put","key","value","options","controller","AbortController","signal","res","post","searchParams","arg","Uint8Array","stream","headers","event","ndjson","clear"],"sources":["/home/lokesh/Desktop/DGovt.Services/Hack36_1/client/node_modules/kubo-rpc-client/src/routing/put.ts"],"sourcesContent":["import { anySignal } from 'any-signal'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { mapEvent } from '../dht/map-event.js'\nimport { multipartRequest } from '../lib/multipart-request.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport type { RoutingAPI } from './index.js'\nimport type { HTTPRPCClient } from '../lib/core.js'\n\nexport function createPut (client: HTTPRPCClient): RoutingAPI['put'] {\n  return async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    try {\n      const res = await client.post('routing/put', {\n        signal,\n        searchParams: toUrlSearchParams({\n          arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n          stream: true,\n          ...options\n        }),\n        ...(\n          await multipartRequest([value], controller, options.headers)\n        )\n      })\n\n      for await (const event of res.ndjson()) {\n        yield mapEvent(event)\n      }\n    } finally {\n      signal.clear()\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;AACtE,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,iBAAiB,QAAQ,gCAAgC;AAIlE,OAAM,SAAUC,SAASA,CAAEC,MAAqB;EAC9C,OAAO,gBAAiBC,GAAGA,CAAEC,GAAG,EAAEC,KAAK,EAAEC,OAAO,GAAG,EAAE;IACnD;IACA,MAAMC,UAAU,GAAG,IAAIC,eAAe,EAAE;IACxC,MAAMC,MAAM,GAAGd,SAAS,CAAC,CAACY,UAAU,CAACE,MAAM,EAAEH,OAAO,CAACG,MAAM,CAAC,CAAC;IAE7D,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMR,MAAM,CAACS,IAAI,CAAC,aAAa,EAAE;QAC3CF,MAAM;QACNG,YAAY,EAAEZ,iBAAiB,CAAC;UAC9Ba,GAAG,EAAET,GAAG,YAAYU,UAAU,GAAGjB,kBAAkB,CAACO,GAAG,CAAC,GAAGA,GAAG,CAACR,QAAQ,EAAE;UACzEmB,MAAM,EAAE,IAAI;UACZ,GAAGT;SACJ,CAAC;QACF,IACE,MAAMP,gBAAgB,CAAC,CAACM,KAAK,CAAC,EAAEE,UAAU,EAAED,OAAO,CAACU,OAAO,CAAC;OAE/D,CAAC;MAEF,WAAW,MAAMC,KAAK,IAAIP,GAAG,CAACQ,MAAM,EAAE,EAAE;QACtC,MAAMpB,QAAQ,CAACmB,KAAK,CAAC;MACvB;IACF,CAAC,SAAS;MACRR,MAAM,CAACU,KAAK,EAAE;IAChB;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}